/* 
    Nesse desafio, voc√™ ir√° solicitar ao usu√°rio que ele insira **dois n√∫meros** e, a partir da√≠, calcular:

- [ ]  A soma dos dois n√∫meros;
- [ ]  A subtra√ß√£o dos dois n√∫meros;
- [ ]  A multiplica√ß√£o dos dois n√∫meros;
- [ ]  A divis√£o dos dois n√∫meros;
- [ ]  O resto da divis√£o dos dois n√∫meros;

F√°cil at√© aqui, n√©? Bora se desafiar? üëÄ üßë‚ÄçüöÄ

- [ ]  Verifique se a soma dos dois n√∫meros √© par ~~(ou √≠mpar)~~;
- [ ]  Verifique se os dois n√∫meros inseridos s√£o iguais ~~(ou diferentes)~~.

*/

let numberOne = Number(prompt(`Digite o primeiro n√∫mero: `));
let numberTwo = Number(prompt(`Digite o segundo n√∫mero: `));

const checkEven = (number) => {
    return (number % 2 === 0 ? `O n√∫mero ${number} √© par!` : `O n√∫mero ${number} √© √≠mpar!`);
}

const areSame = (numberOne, numberTwo) => {
    return (numberOne === numberTwo ? `Os n√∫meros ${numberOne} e ${numberTwo} s√£o iguais!` : `Os n√∫meros ${numberOne} e ${numberTwo} s√£o diferentes!`);
}

alert(checkEven(numberOne));
alert(checkEven(numberTwo));
alert(areSame(numberOne, numberTwo));

const add = (numberOne, numberTwo) => {
    return numberOne + numberTwo;
}

const subtract = (numberOne, numberTwo) => {
    return numberOne - numberTwo;
}

const multiply = (numberOne, numberTwo) => {
    return numberOne * numberTwo;
}

const toDivide = (numberOne, numberTwo) => {
    return numberOne / numberTwo;
}

const restToDivision = (numberOne, numberTwo) => {
    return numberOne % numberTwo;
}

alert(`A soma dos dois n√∫meros √©: ${add(numberOne, numberTwo)}`);
alert(`A subtra√ß√£o dos dois n√∫meros √©: ${subtract(numberOne, numberTwo)}`);
alert(`A multiplica√ß√£o dos dois n√∫meros √©: ${multiply(numberOne, numberTwo)}`);
alert(`A divis√£o dos dois n√∫meros √©: ${toDivide(numberOne, numberTwo)}`);
alert(`O resto da divis√£o dos dois n√∫meros √©: ${restToDivision(numberOne, numberTwo)}`);

