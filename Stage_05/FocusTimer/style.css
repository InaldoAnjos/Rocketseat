* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;
    text-decoration: none;
}

:root {
    font-size: 62.5%;

    --bg-color:   #121214;

    --base-color:        194;
    --primary-color:     hsl(var(--base-color), 100%, 63%);
    --color-placeholder: hsla(var(--base-color), 30%, 70%, 0.35);
    --bg-modal:          hsla(var(--base-color), 100%, 63%, 0.13);
    --bg-buttons:        hsla(var(--base-color), 100%, 63%, 0.13);
    --bg-buttons-hover:  hsla(var(--base-color), 30%, 30%);
    --bg-bar-error:      #F03E3E;

    --fc-error: #FFFFFF;
    --fc-timer: #FFFFFF;
    --fs-timer:   8rem;
    --ff-timer:  'Roboto', sans-serif;

    --fs-alert-error:  1.6rem;
    --fs-setTimer:     3.5rem;
    --fs-setTimerSpan: 6rem;
}

body {
    position: relative;
    background: var(--bg-color);
    height: 100vh;
}

body, h1, span, input, button {
    font-family: var(--ff-timer);
}

/* Alert Error */
.alert-error.open {
    visibility: visible;
    opacity: 1;

    animation: slide-alert-error-open 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.alert-error.close {
    visibility: visible;
    opacity: 1;

    animation: slide-alert-error-close 0.7s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}

.alert-error {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background-color: var(--bg-bar-error);

    font-size: var(--fs-alert-error);
    font-weight: 600;
    line-height: 2rem;
    color: var(--fc-error);

    text-align: center;
    padding: 0.7rem 0;

    visibility: hidden;
    opacity: 0;
}

main {
    align-self: center;
    margin-top: -12rem;
}

.container {
    height: 100vh;
    display: grid;
    place-items: center;

    opacity: 1 ;
    visibility: visible;
}

.container.close {
    opacity: 0;
    visibility: hidden;
}

.timer {
    display: flex;
    justify-content: center;
}

main span{
    text-align: center;
    font-size: clamp(4rem, 4rem + 10vw, var(--fs-timer));
    font-weight: 600;
    color: var(--fc-timer);
    
    margin-bottom: 1.6rem;
}

.play svg path,
.pause svg path,
.sound-on svg path{
    fill: var(--primary-color);
}

.modal svg path {
    stroke: var(--primary-color);
}

button svg {
    width: clamp(3.2rem, 2rem + 12vw, 6.4rem);
}


.button-container {
    width:  clamp(18rem, 10rem + 25vw, 22.8rem);
    height: clamp(4rem, 6rem + 5vh, 10.8rem);
    border-radius: 9999px;
    background-color: var(--bg-buttons);
    
    display: flex;
    gap: 3.2rem;
    align-items: center;
    justify-content: center;
    
    padding: 2.2rem 4rem;
}

button {
    background-color: transparent;
    border: none;
    cursor: pointer;
}

.hide {
    display: none;
}

.sound-button {
    position: absolute;
    right: 4rem;
    bottom: 3.2rem;
}

.modal-wrapper {
    margin-top: -12rem;
    position: absolute;
    inset: 0;
    display: grid;
    place-items: center;
    place-content: center;

    opacity: 0;
    visibility: hidden;
}

.modal-wrapper.open {
    opacity: 1;
    visibility: visible;
}

.modal {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    position: relative;
    text-align: center;
    color: var(--fc-timer);
    background: var(--bg-modal);
    
    width: clamp(30rem, 20rem + 15vw, 40rem);
    height: clamp(20rem, 20rem + 15vh, 40rem);
    
    padding: 2rem 3.2rem;
    
    box-shadow: 0rem 0.2rem 0.4rem rgba(0, 0, 0, 0.1);
    border-radius: 0.6rem;
    
    opacity: 0;
    visibility: hidden;
}

.modal.open {
    opacity: 1;
    visibility: visible;
}

.modal h1 {
    margin-bottom: 1.6rem;
    font-size: var(--fs-setTimer);
}

.modal span {
    font-size: var(--fs-setTimerSpan);
    margin-bottom: 1rem;
}

.input-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.modal input {
    text-align: center;
    font-size: var(--fs-setTimerSpan);
    font-weight: 700;
    color: var(--bg-buttons-hover);

    border-radius: 1rem;
    border: none;
    max-width: 12rem;
    min-height: 8rem;
}

/*Esconder as setinhas do input type number*/
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    appearance: none;
}

.modal input::placeholder {
    color: var(--color-placeholder);
}

.modal input:focus {
    outline: 2px solid var(--primary-color);
}

.modal .button-close {
    position: absolute;
    top: clamp(0.7rem, 1.4rem, 2rem);
    right: clamp(0.3rem, 0.3rem, 1rem);
}

.button-close:hover svg path{
    stroke: rgba(189, 53, 29, 0.863);
    transition: 400ms;
}

#setTimer {
    width: 100%;
    padding: 1rem;

    border-radius: 1rem;
    margin-top: 1.5rem;
    background-color: var(--bg-buttons);
    border: 1px solid #ffffff50;

    color: #FFFFFF;
    font-size: 3rem;
    font-weight: 600;
    text-transform: uppercase;
}

#setTimer:hover {
    color: var(--bg-buttons-hover);
    background-color: #FFFFFF;

    transition: 400ms;
}

/* Keyframes */

/* Alert Error */

@keyframes slide-alert-error-open {
    0% {
        transform: translateY(-70px);
    }
    100% {
        transform: translateY(0px);
    }
}

@keyframes slide-alert-error-close {
    0% {
        transform: translateY(0px);
    }
    100% {
        transform: translateY(-70px);
    }
}